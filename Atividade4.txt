Atividade 1:

1-
    a- "Main" é uma label que, como dito no texto desse exercício, dá um nome a uma posição de memória.

    b- Porque os rótulos podem ser usados para fazer uma descrição mais precisa do que o código faz, em vez de ser só 
    um número ou letra que não indica o que o código possa fazer.

    c- É parecido com uma variável em qualquer linguagem C-like: o nome que nós vemos é somente uma indicação de qual endereço 
    de memória que a informação dentro da variável está guardada, e não o endereço em si.

2- 
    main:
    addi t0, zero, 4
    ecall

    addi a0, a0, 2

    addi t0, zero, 1
    ecall

    j main
    ret

Atividade 2:

    main:
    addi t0, zero, 4
    ecall

    addi t1, a0, zero   #guardar numero digitado em uma variavel separada para checar depois
    addi a0, a0, 2
    
    addi t0, zero, 1 
    ecall               #impressão do número antes da checagem

    bne t1, zero, main

    ret

Atividade 3:

main:
    addi t0, zero, 4
    ecall

    addi t1, a0, zero   #guardar numero digitado em uma variavel separada
    beq t1, zero, fim   #checagem do número antes da impressão

    addi a0, a0, 2
    
    addi t0, zero, 1
    ecall

    j main              #foi mudado para "j main" pois a checagem foi feita antes, então se chegou até aqui é porque o número obrigatóriamente não é zero

fim:
    ret

Atividade 4:

main:
    addi t1, zero, 0   #inicializando t1, o contador, como 0

loop:
    bge t1, 10, fim    #loop for
    
    addi t0, zero, 4
    ecall

    addi a0, a0, 2

    addi t0, zero, 1
    ecall

    addi t1, t1, 1    #incrementando o contador em 1
    j loop            #voltando pro inicio do loop

fim:
    ret

Atividade 5:

main:
    addi t0, zero, 4
    ecall
    addi t1, a0, 0
    ecall
    addi t2, a0, 0

    beq t1, zero, fim
    beq t2, zero, fim

    blt t1, t2, dois_maior

    j um_maior              #tambem funciona caso os dois numeros forem iguais

dois_maior:
    addi t0, zero, 1
    addi a0, t2, 0
    ecall
    j main

um_maior:
    addi t0, zero, 1
    addi a0, t1, 0
    ecall
    j main

fim:
    ret
    
Atividade 6:

main:
  addi t0, zero, 4
  ecall   
  
  blt a0, 10, negativo
 
  addi a0, a0, -10 
  
  addi t0, zero, 1
  ecall 
  ret

negativo:
  addi t1, a0, -10
  addi a0, zero, 45
  addi t0, zero, 2
  ecall

  sub t1, zero, t1     #inverte o sinal
  addi a0, t1, 0

  addi t0, zero, 1
  ecall
  ret